#test build
import os

rootpath = '../../..'
extpath = os.path.join(rootpath, 'ext')
outpost_core_path = os.path.join(extpath, 'outpost-core')

envGlobal = Environment(toolpath=[os.path.join(extpath, 'scons-build-tools/site_tools')],
                        tools=['utils_buildformat'],
                        BASEPATH=os.path.abspath('.'),
                        ENV=os.environ)

buildfolder = os.path.join(rootpath, 'build')
envGlobal.Tool('compiler_hosted_gcc')
envGlobal.Tool('settings_buildpath')
envGlobal['BUILDPATH'] = os.path.abspath(os.path.join(buildfolder, 'unittest'))
envGlobal['CXXFLAGS_language'] = ['-std=c++11']
envGlobal['CCFLAGS_optimize'] = ['-O0']

envGlobal.SConscript([
		os.path.join(outpost_core_path, 'modules/SConscript.library'),
		os.path.join(rootpath, 'ds/paffs/SConscript'),
		os.path.join(rootpath, 'ds/paffs/driver/SConscript'),
		os.path.join(rootpath, 'simu/SConscript'),
	],
	exports='envGlobal')

envGlobal.SConscript(
	os.path.join(outpost_core_path, 'modules/SConscript.test'),
exports='envGlobal')

env = envGlobal.Clone()

env.Append(CPPPATH=[
	os.path.abspath(os.path.join(rootpath, "ds")),
])


files  = env.Glob('*.cpp')

envGlobal.Alias('build', env.Program('unittest', files))
envGlobal.Default('build')
