import os

rootpath = Dir('../../').abspath
buildpath = os.path.join(rootpath, 'build')
pluginpath = os.path.join(rootpath, '../')
extpath = os.path.join(rootpath, 'ext')
print("Integration Test")

envGlobal = Environment(toolpath=[os.path.join(pluginpath, 'scons-build-tools/site_tools')],
                        tools=['compiler_sparc_rtems_gcc', 'settings_buildpath', 'utils_buildsize', 'utils_buildformat'],
                        OS='rtems',
                        BOARD='nexys3',
                        DEVICE_SIZE={
                            'name' : 'Eu:CROPIS CDH OBC SDM',
                            'flash': 2097151,
                            'ram'  : 134217728,
                        },
                        ENV=os.environ)

buildfolder = os.path.join(buildpath, 'it_debug/')
envGlobal.ParseFlags('-DDEBUG')
envGlobal['CCFLAGS_optimize'] = ['-O0']
envGlobal['RTEMS_ROOT_FOLDER'] = '/opt/rtems-4.10.x'
envGlobal['COMPILERPATH'] = '$RTEMS_ROOT_FOLDER/bin/'
envGlobal['RTEMS_BSP_FOLDER'] = '$RTEMS_ROOT_FOLDER/sparc-rtems4.10.x/leon3/lib'
envGlobal['COMPILERPREFIX'] = 'sparc-rtems4.10.x-'
envGlobal.Append(CCFLAGS_target = [
    #'-I$RTEMS_ROOT_FOLDER/include/',
    #'-B$RTEMS_BSP_FOLDER',
    #'-I$RTEMS_BSP_FOLDER/include/',
    #'--specs=$RTEMS_BSP_FOLDER/bsp_specs',
    '-qrtems',
    #'-v',
])

envGlobal.Tool('compiler_sparc_rtems_gcc')
envGlobal.Tool('settings_buildpath')
envGlobal['BASEPATH'] = rootpath 
envGlobal['BUILDPATH'] = os.path.abspath(buildfolder)
envGlobal['OUTPOST_CORE_PATH'] = os.path.join(pluginpath, 'outpost-core')
envGlobal['EXTPATH'] = extpath
envGlobal['CXXFLAGS_language'] = ['-std=gnu++11']
envGlobal['CFLAGS_language'] = ['-std=gnu99']

envGlobal.Append(CPPPATH=[
    #This defines which config paffs will use.
    os.path.abspath("./config/")
])

envGlobal.SConscript([
        os.path.join(rootpath, 'src/SConscript'),
        os.path.join(rootpath, 'src/driver/SConscript.office_model_nexys3'),
    ],
    exports=['envGlobal'])

env = envGlobal.Clone()

files = env.Glob('*.cpp')

programElf = env.Program('office.elf', files)
programBin = env.Bin(programElf) 

envGlobal.Alias('build', programBin)
envGlobal.Install('$BUILDPATH', programElf)
envGlobal.Install('$BUILDPATH', programBin)
envGlobal.Default('build')
